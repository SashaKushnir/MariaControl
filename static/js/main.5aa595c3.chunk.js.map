{"version":3,"sources":["components/CarSpaces/CarSpaceItem.module.css","components/CarSpaces/CarSpaces.module.css","reportWebVitals.ts","redux/parking/parkingA.ts","components/CarSpaces/CoolTime/CoolTime.tsx","components/CarSpaces/CarSpaceItem.tsx","components/CarSpaces/CarSpaces.tsx","redux/parking/parkingR.ts","redux/store.ts","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","parkingA","bookSpaceItem","id","type","countSpaces","CoolTime","seconds","hours","Math","trunc","newSec","minutes","sec","CarSpaceItem","aInterval","disabled","d","callQueuedTime","useDispatch","useState","timer","setTimer","useEffect","setInterval","clearInterval","className","s","spaceI","selected","onClick","CarSpaces","allBooked","setAllBookedFlag","carsSpaces","useSelector","state","parkingR","carSpaces","map","index","Date","getTime","empty","emptySpaces","fooledSpaces","length","spaceArrWrapper","CarSpacess","props","this","count","prevProps","prevState","snapshot","setState","React","Component","connector","connect","compose","initialParking","parkingSpace","i","push","carSpace","random","createRandomCarSpace","reducersList","combineReducers","parkingState","action","carSpaceItem","reduce","acum","curr","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","thunkMW","store","createStore","App","AppWrapper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aa595c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"CarSpaceItem_selected__2iCHs\",\"spaceI\":\"CarSpaceItem_spaceI__eaTNh\",\"disabled\":\"CarSpaceItem_disabled__nNyyv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spaceArrWrapper\":\"CarSpaces_spaceArrWrapper__1N3-X\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const parkingA = {\r\n    bookSpaceItem: (id: number) => ({type: \"SET_BOOKED_ITEM\", id}) as const,\r\n    countSpaces: () => ({type: \"COUNT_SPACES\" }) as const,\r\n}\r\n","import React from 'react'\r\n\r\nexport const CoolTime: React.FC<{ seconds: number }> = ({seconds}) => {\r\n    const hours = Math.trunc(seconds / 3600)\r\n    let newSec = seconds - hours * 3600;\r\n    const minutes = Math.trunc(newSec / 60)\r\n    newSec-= minutes * 60\r\n    const sec = newSec\r\n    return <div>\r\n\r\n        {(hours >= 1) && <span>\r\n            {hours} год </span>}\r\n        {((minutes >= 1) || (hours >= 1)) && <span>\r\n            {minutes} хв </span>}\r\n        {((sec >= 1) || (minutes >= 1) || (hours >= 1)) && <span>\r\n            {sec} сек\r\n        </span>}\r\n    </div>\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {CarSpaceItemType} from \"../../redux/parking/parkingR\";\r\nimport s from './CarSpaceItem.module.css'\r\nimport {parkingA} from \"../../redux/parking/parkingA\";\r\nimport {CoolTime} from \"./CoolTime/CoolTime\";\r\n\r\nexport const CarSpaceItem: React.FC<CarSpaceItemType> = ({id, disabled, callQueuedTime}) => {\r\n    const d = useDispatch()\r\n    const [timer, setTimer] = useState(0)\r\n    let aInterval: any\r\n\r\n    const timing = () => {\r\n        if(disabled)\r\n            aInterval = setInterval(() => {setTimer(timer + 1)}, 1000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        timing()\r\n        return () => {\r\n            clearInterval(aInterval)\r\n        }\r\n    },[timer])\r\n    useEffect(() => {\r\n        if(disabled) {\r\n            setTimer(1)\r\n        }\r\n    },[disabled])\r\n    const bookSpace = () => {\r\n        if(!disabled){\r\n            d(parkingA.bookSpaceItem(id))\r\n            d(parkingA.countSpaces())\r\n        }\r\n\r\n    }\r\n    return <div className={`${s.spaceI} ${disabled?s.disabled:s.selected}`} onClick={bookSpace}>\r\n        <div>Парковочне місце №{id}</div>\r\n        <div>\r\n            <CoolTime seconds={timer}/>\r\n        </div>\r\n    </div>\r\n}\r\n","import React, {Dispatch, useEffect, useState} from 'react'\r\nimport {RootState} from \"../../redux/store\";\r\nimport {connect, ConnectedProps, useDispatch, useSelector} from \"react-redux\";\r\nimport {CarSpaceItem} from \"./CarSpaceItem\";\r\nimport s from './CarSpaces.module.css'\r\nimport {parkingA} from \"../../redux/parking/parkingA\";\r\nimport {render} from \"react-dom\";\r\nimport {compose} from \"redux\";\r\nimport {CarSpaceItemType} from \"../../redux/parking/parkingR\";\r\n\r\nexport const CarSpaces = () => {\r\n    const [allBooked, setAllBookedFlag] = useState(false)\r\n    const carsSpaces = useSelector((state: RootState) => state.parkingR.carSpaces).map((spaceI, index) => {\r\n        return <CarSpaceItem id={spaceI.id} disabled={spaceI.disabled} callQueuedTime={new Date().getTime()}\r\n                             key={spaceI.id}/>\r\n    })\r\n    const d = useDispatch()\r\n    useEffect(() => {\r\n        d(parkingA.countSpaces())\r\n    })\r\n    const empty = useSelector((state: RootState) => state.parkingR.emptySpaces)\r\n    const fooledSpaces = useSelector((state: RootState) => state.parkingR.fooledSpaces)\r\n    useEffect(() => {\r\n        if (fooledSpaces === carsSpaces.length)\r\n            setAllBookedFlag(true)\r\n        else\r\n            setAllBookedFlag(false)\r\n    }, [fooledSpaces])\r\n    return <div>\r\n        <div>\r\n            1 година паркування – безкоштовно! Тариф – 20 грн/година»\r\n        </div>\r\n        <div className={s.spaceArrWrapper}>\r\n            {carsSpaces}\r\n        </div>\r\n        <div>\r\n            {empty} вільних місць\r\n        </div>\r\n        <div>\r\n            {fooledSpaces} зайнятих місць\r\n        </div>\r\n        {allBooked && <div>\r\n            Вибачте, але вільних місць на парковці немає\r\n        </div>}\r\n    </div>\r\n}\r\n\r\ntype CaeSpacessInter = ConnectedProps<typeof connector>\r\nclass CarSpacess extends React.Component<CaeSpacessInter, { allBooked: boolean }> {\r\n    constructor(props: CaeSpacessInter) {\r\n        super(props);\r\n        this.state = {\r\n            allBooked: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.count()\r\n\r\n    }\r\n    componentDidUpdate(prevProps: Readonly<CaeSpacessInter>, prevState: Readonly<{ allBooked: boolean }>, snapshot?: any) {\r\n        if(prevProps.fooledSpaces !== this.props.fooledSpaces) {\r\n            if (this.props.fooledSpaces === this.props.carsSpaces.length) {\r\n                this.setState({\r\n                    allBooked: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n    return <div>\r\n        <div>\r\n            1 година паркування – безкоштовно! Тариф – 20 грн/година»\r\n        </div>\r\n        <div className={s.spaceArrWrapper}>\r\n            {\r\n                this.props.carsSpaces.map((spaceI, index) => {\r\n            return <CarSpaceItem id={spaceI.id} disabled={spaceI.disabled} callQueuedTime={new Date().getTime()}\r\n            key={spaceI.id}/>})\r\n            }\r\n        </div>\r\n        <div>\r\n            {this.props.emptySpaces} вільних місць\r\n        </div>\r\n        <div>\r\n            {this.props.fooledSpaces} зайнятих місць\r\n        </div>\r\n        {this.state.allBooked && <div>\r\n            Вибачте, але вільних місць на парковці немає\r\n        </div>}\r\n    </div>\r\n}\r\n}\r\nconst mstp = (state:RootState) => ({\r\n    carsSpaces: state.parkingR.carSpaces,\r\n    fooledSpaces: state.parkingR.fooledSpaces,\r\n    emptySpaces: state.parkingR.emptySpaces,\r\n})\r\n\r\nconst connector = connect(mstp, {\r\n    count: parkingA.countSpaces})\r\n\r\n\r\nexport default compose(\r\n    connector\r\n)(CarSpacess)\r\n\r\n// useEffect(() => {\r\n//     if (fooledSpaces === carsSpaces.length)\r\n//         setAllBookedFlag(true)\r\n//     else\r\n//         setAllBookedFlag(false)\r\n// }, [fooledSpaces])","import {ActionsTypes} from \"../store\";\r\nimport {parkingA} from \"./parkingA\";\r\n\r\ninterface InitialParkingType {\r\n    carSpaces : Array<CarSpaceItemType>\r\n    emptySpaces: number\r\n    fooledSpaces : number\r\n}\r\n\r\nexport interface CarSpaceItemType {\r\n    id: number\r\n    disabled: boolean\r\n    callQueuedTime?: number\r\n}\r\n\r\nexport const createRandomCarSpace = (parkingSpace: number = 10): Array<CarSpaceItemType> => {\r\n    const carSpaces:Array<CarSpaceItemType> = []\r\n    for (let i = 0; i < parkingSpace; i ++) {\r\n        carSpaces.push({\r\n            id: i + 1,\r\n            disabled: false,\r\n        })\r\n    }\r\n    return carSpaces.map((carSpace) => {\r\n        carSpace.disabled =  Math.random() < 0.5\r\n        return carSpace\r\n    })\r\n}\r\n\r\nconst initialParking : InitialParkingType = {\r\n    carSpaces: createRandomCarSpace(),\r\n    emptySpaces: 0,\r\n    fooledSpaces: 0\r\n}\r\n\r\nexport const parkingR = (parkingState: InitialParkingType = initialParking, action: ActionsTypes<typeof parkingA>): InitialParkingType => {\r\n    switch (action.type) {\r\n        case \"SET_BOOKED_ITEM\":\r\n            return {\r\n                ...parkingState,\r\n                carSpaces: [...parkingState.carSpaces].map((carSpaceItem) => {\r\n                    if(carSpaceItem.id === action.id) {\r\n                        carSpaceItem.disabled = true\r\n                    }\r\n                    return carSpaceItem\r\n                })\r\n            }\r\n        case \"COUNT_SPACES\":\r\n            return {\r\n                ...parkingState,\r\n                emptySpaces: parkingState.carSpaces.reduce((acum, curr) => {\r\n                    if(!curr.disabled)\r\n                        acum++\r\n                    return acum\r\n                }, 0),\r\n                fooledSpaces: parkingState.carSpaces.reduce((acum, curr) => {\r\n                    if(curr.disabled)\r\n                        acum++\r\n                    return acum\r\n                }, 0),\r\n            }\r\n        default:\r\n            return parkingState\r\n    }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\"\r\nimport thunkMW from 'redux-thunk'\r\nimport {parkingR} from \"./parking/parkingR\";\r\n\r\nlet reducersList = combineReducers({\r\n    parkingR\r\n})\r\nexport type RootState = ReturnType<typeof reducersList>\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    // @ts-ignore\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        // @ts-ignore\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n        }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunkMW)\r\n);\r\nlet store = createStore(reducersList, enhancer)\r\ntype PropertiesType<T> = T extends {[key: string]: infer U} ? U : never;\r\nexport type ActionsTypes<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<PropertiesType<T>>\r\n\r\n\r\nexport default store","import React from 'react';\r\nimport './App.css';\r\nimport CarSpacess, {CarSpaces} from \"./components/CarSpaces/CarSpaces\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nexport const App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <CarSpaces/>\r\n            <CarSpacess/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const AppWrapper = () => {\r\n    return  <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AppWrapper} from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AppWrapper/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}